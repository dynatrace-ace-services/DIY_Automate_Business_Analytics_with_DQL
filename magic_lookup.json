{"version":"5","defaultTimeframe":{"from":"now-2h","to":"now","details":{"from":{"type":"expression","normalized":"now-2h","date":"2023-10-17T08:34:38.761Z"},"to":{"type":"expression","normalized":"now","date":"2023-10-17T10:34:38.761Z"}}},"sections":[{"id":"be2f2735-8e30-4924-9f56-f68223122a9e","type":"markdown","markdown":"# Automate business analytics with DQL lookup command \nIn this notebook, we use 3 datasources \n  - File1, processing of gains, which contains `start_time` and `betID` \n  - File2, correlation id, which contains `betID` and `runID`\n  - File3, online payment, which contains `runID` and `end_time`\n\n## Demo in 3 steps : \n\n- Calculate the delay payment\n\n    ``payment_delay=end_time-start_time``\n\n- Calculate the SLO \n\n    ``objective = 99% < 12m payment delay on default period``\n\n- Create the workflow: \"if SLO is not successful\"\n\n    ``Send the result on webhook``  \n    ``Ingest metrics on your classic tenant``\n\n  ![Payment_delay](https://github.com/dynatrace-ace-services/magic_lookup/blob/main/payment_delay.png?raw=true)\n\n"},{"id":"3a07c5ac-9e9f-44d5-85a4-18803677158f","type":"markdown","markdown":"## File 1: Processing of gains\ncontains `start_time`, `betID`\n\n-  display the result"},{"id":"29bdd622-514f-47ec-adcc-4c1d5236289d","type":"dql","showTitle":false,"state":{"input":{"value":"data \n    record(timestamp=now()-45m, log.source=\"file1\", content=\"betID=BET_20231019160000, start_time=20231019160000986, winners=65\"),\n    record(timestamp=now()-30m, log.source=\"file1\", content=\"betID=BET_20231019161501, start_time=20231019161501986, winners=47\"),\n    record(timestamp=now()-15m, log.source=\"file1\", content=\"betID=BET_20231019163101, start_time=20231019163101986, winners=118\")\n| parse content,\"'betID=' WORD:betID ', start_time='TIMESTAMP('yyyyMMddHHmmssSSS'):start_time ', winners='INT:nbr_winners\"\n//fields\n| fields start_time, betID, nbr_winners","timeframe":{"from":"now-2h","to":"now"}},"state":"success","davis":{"includeLogs":true,"isDavisVisualizationAvailable":true},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["content"]],"firstVisibleRowIndex":0,"columnWidths":{},"enableLineWrap":true}},"result":{"value":{"records":[],"metadata":{"grail":{"canonicalQuery":"data record({timestamp = now() - 45m}, {log.source = \"file1\"}, {content = \"betID=BET_20231019160000, start_time=20231019160000986, winners=65\"}), record({timestamp = now() - 30m}, {log.source = \"file1\"}, {content = \"betID=BET_20231019161501, start_time=20231019161501986, winners=47\"}), record({timestamp = now() - 15m}, {log.source = \"file1\"}, {content = \"betID=BET_20231019163101, start_time=20231019163101986, winners=118\"})\n| parse content, \"'betID=' WORD:betID ', start_time='TIMESTAMP('yyyyMMddHHmmssSSS'):start_time ', winners='INT:nbr_winners\"\n| fields start_time, betID, nbr_winners\n| limit 0","timezone":"Europe/Paris","query":"data \n    record(timestamp=now()-45m, log.source=\"file1\", content=\"betID=BET_20231019160000, start_time=20231019160000986, winners=65\"),\n    record(timestamp=now()-30m, log.source=\"file1\", content=\"betID=BET_20231019161501, start_time=20231019161501986, winners=47\"),\n    record(timestamp=now()-15m, log.source=\"file1\", content=\"betID=BET_20231019163101, start_time=20231019163101986, winners=118\")\n| parse content,\"'betID=' WORD:betID ', start_time='TIMESTAMP('yyyyMMddHHmmssSSS'):start_time ', winners='INT:nbr_winners\"\n| fields start_time, betID, nbr_winners\n| limit 0","scannedRecords":0,"dqlVersion":"V1_0","scannedBytes":0,"locale":"","executionTimeMilliseconds":7,"notifications":[],"queryId":"b78768d2-2cd9-4bd3-bc70-61f25266b577","sampled":false}},"types":[]},"code":200,"notifications":[],"dateTime":"2023-10-07T16:23:09.221Z","input":{"value":"data \n    record(timestamp=now()-45m, log.source=\"file1\", content=\"betID=BET_20231019160000, start_time=20231019160000986, winners=65\"),\n    record(timestamp=now()-30m, log.source=\"file1\", content=\"betID=BET_20231019161501, start_time=20231019161501986, winners=47\"),\n    record(timestamp=now()-15m, log.source=\"file1\", content=\"betID=BET_20231019163101, start_time=20231019163101986, winners=118\")\n| parse content,\"'betID=' WORD:betID ', start_time='TIMESTAMP('yyyyMMddHHmmssSSS'):start_time ', winners='INT:nbr_winners\"\n| fields start_time, betID, nbr_winners\n| limit 0","timeframe":{"from":"now-2h","to":"now"}}},"visualization":"table"},"height":183},{"id":"1eaaaa5c-b74d-4c5a-90c1-0d42d8a3ce55","type":"markdown","markdown":"# File2: Correlation ID\ncontains `betID`, `runID`\n- display the result with the runID and betID correlation"},{"id":"7008c228-9982-4459-811c-ed73358bcd11","type":"dql","showTitle":false,"state":{"input":{"value":"data \n    record(timestamp=now()-43m, log.source=\"file2\", content=\"betID=BET_20231019160000, runID=2023101900045\"),\n    record(timestamp=now()-28m, log.source=\"file2\", content=\"betID=BET_20231019161501, runID=2023101900055\"),\n    record(timestamp=now()-12m, log.source=\"file2\", content=\"betID=BET_20231019163101, runID=2023101900065\")\n| parse content,\"'betID=' WORD:betID ', runID=' WORD:runID\"\n//fields\n| fields betID, runID","timeframe":{"from":"now-2h","to":"now"}},"state":"success","davis":{"includeLogs":true,"isDavisVisualizationAvailable":true},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{},"enableLineWrap":true}},"result":{"value":{"records":[],"metadata":{"grail":{"canonicalQuery":"data record({timestamp = now() - 43m}, {log.source = \"file2\"}, {content = \"betID=BET_20231019160000, runID=2023101900045\"}), record({timestamp = now() - 28m}, {log.source = \"file2\"}, {content = \"betID=BET_20231019161501, runID=2023101900055\"}), record({timestamp = now() - 12m}, {log.source = \"file2\"}, {content = \"betID=BET_20231019163101, runID=2023101900065\"})\n| parse content, \"'betID=' WORD:betID ', runID=' WORD:runID\"\n| fields betID, runID\n| limit 0","timezone":"Europe/Paris","query":"data \n    record(timestamp=now()-43m, log.source=\"file2\", content=\"betID=BET_20231019160000, runID=2023101900045\"),\n    record(timestamp=now()-28m, log.source=\"file2\", content=\"betID=BET_20231019161501, runID=2023101900055\"),\n    record(timestamp=now()-12m, log.source=\"file2\", content=\"betID=BET_20231019163101, runID=2023101900065\")\n| parse content,\"'betID=' WORD:betID ', runID=' WORD:runID\"\n| fields betID, runID\n| limit 0\n","scannedRecords":0,"dqlVersion":"V1_0","scannedBytes":0,"locale":"","executionTimeMilliseconds":4,"notifications":[],"queryId":"69851bac-fd65-425e-b2f0-430e86645479","sampled":false}},"types":[]},"code":200,"notifications":[],"dateTime":"2023-10-07T16:24:21.950Z","input":{"value":"data \n    record(timestamp=now()-43m, log.source=\"file2\", content=\"betID=BET_20231019160000, runID=2023101900045\"),\n    record(timestamp=now()-28m, log.source=\"file2\", content=\"betID=BET_20231019161501, runID=2023101900055\"),\n    record(timestamp=now()-12m, log.source=\"file2\", content=\"betID=BET_20231019163101, runID=2023101900065\")\n| parse content,\"'betID=' WORD:betID ', runID=' WORD:runID\"\n| fields betID, runID\n| limit 0\n","timeframe":{"from":"now-2h","to":"now"}}},"visualization":"table"},"height":159},{"id":"be1307ca-6362-417e-b15c-cefecbc27772","type":"markdown","markdown":"## File3: Online payment\ncontains `runID`, `end_time`\n- display the result"},{"id":"aa295fa1-4f71-4fc1-9712-458025a22b56","type":"dql","showTitle":false,"state":{"input":{"value":"data \n    record(timestamp=now()-41m, log.source=\"file3\", content=\"runID=2023101900045, end_time=2023/10/19 16:07:30\"),\n    record(timestamp=now()-26m, log.source=\"file3\", content=\"runID=2023101900055, end_time=2023/10/19 16:25:00\"),\n    record(timestamp=now()-10m, log.source=\"file3\", content=\"runID=2023101900065, end_time=2023/10/19 16:48:30\")\n| parse content,\"'runID=' WORD:runID ', end_time='TIMESTAMP('yyyy/MM/d HH:mm:ss'):end_time\"\n//fields\n| fields runID, end_time","timeframe":{"from":"now-2h","to":"now"}},"state":"success","davis":{"includeLogs":true,"isDavisVisualizationAvailable":true},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[],"metadata":{"grail":{"canonicalQuery":"data record({timestamp = now() - 41m}, {log.source = \"file3\"}, {content = \"runID=2023101900045, end_time=2023/10/19 16:01:30\"}), record({timestamp = now() - 26m}, {log.source = \"file3\"}, {content = \"runID=2023101900055, end_time=2023/10/19 16:18:00\"}), record({timestamp = now() - 10m}, {log.source = \"file3\"}, {content = \"runID=2023101900065, end_time=2023/10/19 16:38:30\"})\n| parse content, \"'runID=' WORD:runID ', end_time='TIMESTAMP('yyyy/MM/d HH:mm:ss'):end_time\"\n| fields runID, end_time\n| limit 0","timezone":"Europe/Paris","query":"data \n    record(timestamp=now()-41m, log.source=\"file3\", content=\"runID=2023101900045, end_time=2023/10/19 16:01:30\"),\n    record(timestamp=now()-26m, log.source=\"file3\", content=\"runID=2023101900055, end_time=2023/10/19 16:18:00\"),\n    record(timestamp=now()-10m, log.source=\"file3\", content=\"runID=2023101900065, end_time=2023/10/19 16:38:30\")\n| parse content,\"'runID=' WORD:runID ', end_time='TIMESTAMP('yyyy/MM/d HH:mm:ss'):end_time\"\n| fields runID, end_time\n| limit 0","scannedRecords":0,"dqlVersion":"V1_0","scannedBytes":0,"locale":"","executionTimeMilliseconds":5,"notifications":[],"queryId":"c469039a-0266-4507-ad76-d16b884aadf3","sampled":false}},"types":[]},"notifications":[],"dateTime":"2023-10-07T16:25:10.498Z","input":{"value":"data \n    record(timestamp=now()-41m, log.source=\"file3\", content=\"runID=2023101900045, end_time=2023/10/19 16:01:30\"),\n    record(timestamp=now()-26m, log.source=\"file3\", content=\"runID=2023101900055, end_time=2023/10/19 16:18:00\"),\n    record(timestamp=now()-10m, log.source=\"file3\", content=\"runID=2023101900065, end_time=2023/10/19 16:38:30\")\n| parse content,\"'runID=' WORD:runID ', end_time='TIMESTAMP('yyyy/MM/d HH:mm:ss'):end_time\"\n| fields runID, end_time\n| limit 0","timeframe":{"from":"now-2h","to":"now"}}},"visualization":"table"},"height":147},{"id":"c6d8b2ab-a4e8-4e9e-8aec-529084d12212","type":"markdown","markdown":"## Step 1.1 : create a lookup with file2 and file3 based on runID\nFor multiple lookups, it's easier to start by the end. \n- fill the `<datasource>` below to create the lookup with `file2` and `file3` based on `runID` and catch the lookup field `end_time`\n- display the result on `betID`, `runID`, `end_time`"},{"id":"490710bd-ad30-45cf-9bb9-b7941bbc92ed","type":"dql","showTitle":false,"state":{"input":{"value":"//file2\n<datasource:file2>\n| lookup[\n        //file3\n        <datasource:file3>\n        ], sourceField: <ID>, lookupField: <ID>, fields:{<lookup_field_to_keep>}\n//fields\n| fields betID,runID, end_time","timeframe":{"from":"now-2h","to":"now"}},"state":"success","davis":{"includeLogs":true,"isDavisVisualizationAvailable":true},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[],"metadata":{"grail":{"canonicalQuery":"fetch logs\n| limit 0","timezone":"Europe/Paris","query":"//file2\nfetch logs\n| limit 0","scannedRecords":0,"dqlVersion":"V1_0","scannedBytes":0,"locale":"","executionTimeMilliseconds":5,"notifications":[],"queryId":"05a377d4-5f31-45c2-8e47-f73f15b2782d","sampled":false}},"types":[]},"notifications":[],"dateTime":"2023-10-07T16:43:27.813Z","input":{"value":"//file2\nfetch logs\n| limit 0","timeframe":{"from":"now-2h","to":"now"}}},"visualization":"table"},"height":181},{"id":"908c001e-e3d7-4926-95c9-3007089c4fce","type":"dql","showTitle":false,"state":{"input":{"value":"//file2\ndata \n    record(timestamp=now()-43m, log.source=\"file2\", content=\"betID=BET_20231019160000, runID=2023101900045\"),\n    record(timestamp=now()-28m, log.source=\"file2\", content=\"betID=BET_20231019161501, runID=2023101900055\"),\n    record(timestamp=now()-12m, log.source=\"file2\", content=\"betID=BET_20231019163101, runID=2023101900065\")\n| parse content,\"'betID=' WORD:betID ', runID=' WORD:runID\"\n| fields timestamp, betID, runID\n| lookup[\n        //file3\n        data \n            record(timestamp=now()-41m, log.source=\"file3\", content=\"runID=2023101900045, end_time=2023/10/19 16:07:30\"),\n            record(timestamp=now()-26m, log.source=\"file3\", content=\"runID=2023101900055, end_time=2023/10/19 16:25:00\"),\n            record(timestamp=now()-10m, log.source=\"file3\", content=\"runID=2023101900065, end_time=2023/10/19 16:48:30\")\n        | parse content,\"'runID=' WORD:runID ', end_time='TIMESTAMP('yyyy/MM/d HH:mm:ss'):end_time\"\n        ], sourceField: runID, lookupField: runID, fields:{end_time}\n| fields betID,runID, end_time\n//solution hidden\n| fields solution=\"the solution is hidden here\"\n| limit 1","timeframe":{"from":"now-2h","to":"now"}},"state":"success","davis":{"includeLogs":true,"isDavisVisualizationAvailable":true},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[{"solution":"the solution is hidden here"}],"metadata":{"grail":{"canonicalQuery":"data record({timestamp = now() - 43m}, {log.source = \"file2\"}, {content = \"betID=BET_20231019160000, runID=2023101900045\"}), record({timestamp = now() - 28m}, {log.source = \"file2\"}, {content = \"betID=BET_20231019161501, runID=2023101900055\"}), record({timestamp = now() - 12m}, {log.source = \"file2\"}, {content = \"betID=BET_20231019163101, runID=2023101900065\"})\n| parse content, \"'betID=' WORD:betID ', runID=' WORD:runID\"\n| fields timestamp, betID, runID\n| lookup \n\t[\n\t\tdata record({timestamp = now() - 41m}, {log.source = \"file3\"}, {content = \"runID=2023101900045, end_time=2023/10/19 16:01:30\"}), record({timestamp = now() - 26m}, {log.source = \"file3\"}, {content = \"runID=2023101900055, end_time=2023/10/19 16:18:00\"}), record({timestamp = now() - 10m}, {log.source = \"file3\"}, {content = \"runID=2023101900065, end_time=2023/10/19 16:38:30\"})\n\t\t| parse content, \"'runID=' WORD:runID ', end_time='TIMESTAMP('yyyy/MM/d HH:mm:ss'):end_time\"\n\t], sourceField:runID, lookupField:runID, fields:{end_time}\n| fields betID, runID, end_time\n| fields \"the solution is hidden here\", alias:solution\n| limit 1","timezone":"Europe/Paris","query":"//file2\ndata \n    record(timestamp=now()-43m, log.source=\"file2\", content=\"betID=BET_20231019160000, runID=2023101900045\"),\n    record(timestamp=now()-28m, log.source=\"file2\", content=\"betID=BET_20231019161501, runID=2023101900055\"),\n    record(timestamp=now()-12m, log.source=\"file2\", content=\"betID=BET_20231019163101, runID=2023101900065\")\n| parse content,\"'betID=' WORD:betID ', runID=' WORD:runID\"\n| fields timestamp, betID, runID\n| lookup[\n        //file3\n        data \n            record(timestamp=now()-41m, log.source=\"file3\", content=\"runID=2023101900045, end_time=2023/10/19 16:01:30\"),\n            record(timestamp=now()-26m, log.source=\"file3\", content=\"runID=2023101900055, end_time=2023/10/19 16:18:00\"),\n            record(timestamp=now()-10m, log.source=\"file3\", content=\"runID=2023101900065, end_time=2023/10/19 16:38:30\")\n        | parse content,\"'runID=' WORD:runID ', end_time='TIMESTAMP('yyyy/MM/d HH:mm:ss'):end_time\"\n        ], sourceField: runID, lookupField: runID, fields:{end_time}\n| fields betID,runID, end_time\n//solution hidden\n| fields solution=\"the solution is hidden here\"\n| limit 1","scannedRecords":0,"dqlVersion":"V1_0","scannedBytes":0,"locale":"","executionTimeMilliseconds":8,"notifications":[],"queryId":"1c489f34-dae1-4705-b654-6c092ae2e637","sampled":false}},"types":[{"mappings":{"solution":{"type":"string"}},"indexRange":[0,0]}]},"notifications":[],"dateTime":"2023-10-07T16:52:45.178Z","input":{"value":"//file2\ndata \n    record(timestamp=now()-43m, log.source=\"file2\", content=\"betID=BET_20231019160000, runID=2023101900045\"),\n    record(timestamp=now()-28m, log.source=\"file2\", content=\"betID=BET_20231019161501, runID=2023101900055\"),\n    record(timestamp=now()-12m, log.source=\"file2\", content=\"betID=BET_20231019163101, runID=2023101900065\")\n| parse content,\"'betID=' WORD:betID ', runID=' WORD:runID\"\n| fields timestamp, betID, runID\n| lookup[\n        //file3\n        data \n            record(timestamp=now()-41m, log.source=\"file3\", content=\"runID=2023101900045, end_time=2023/10/19 16:01:30\"),\n            record(timestamp=now()-26m, log.source=\"file3\", content=\"runID=2023101900055, end_time=2023/10/19 16:18:00\"),\n            record(timestamp=now()-10m, log.source=\"file3\", content=\"runID=2023101900065, end_time=2023/10/19 16:38:30\")\n        | parse content,\"'runID=' WORD:runID ', end_time='TIMESTAMP('yyyy/MM/d HH:mm:ss'):end_time\"\n        ], sourceField: runID, lookupField: runID, fields:{end_time}\n| fields betID,runID, end_time\n//solution hidden\n| fields solution=\"the solution is hidden here\"\n| limit 1","timeframe":{"from":"now-2h","to":"now"}}},"visualization":"recordView"},"height":85,"showInput":false},{"id":"f06b80cc-4d8a-4669-a004-2b1290ea1519","type":"markdown","markdown":"## Step 1.2 : create a lookup with file1 and the previous lookup based on betID\n- fill the `<datasource>` below to create the lookup with `file1` and `result_1.1` based on `betID` and catch the lookup fields `runID` and `end_time`  \n- display the result on : `start_time`, `payment_delay` = ( `end_time` - `start_time`)"},{"id":"e35f18a1-e289-4206-8422-37f59bb8c2b8","type":"dql","showTitle":false,"state":{"input":{"value":"//file1\n<datasource:file1>\n| lookup[\n        //file 2 + file3\n        <datasource:result_1.1>\n        ], sourceField:<ID>, lookupField:<ID>, fields:{<lookup_field_to_keep>}\n//fields\n| fields start_time, payment_delay = ( end_time - start_time)","timeframe":{"from":"now-2h","to":"now"}},"state":"success","davis":{"includeLogs":true,"isDavisVisualizationAvailable":true},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"},"categoryOverrides":{}},"singleValue":{"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[],"metadata":{"grail":{"canonicalQuery":"fetch logs\n| limit 0","timezone":"Europe/Paris","query":"fetch logs\n| limit 0","scannedRecords":0,"dqlVersion":"V1_0","scannedBytes":0,"locale":"","executionTimeMilliseconds":3,"notifications":[],"queryId":"1551ddbb-6d6d-4a30-9510-344b6a3ffabd","sampled":false}},"types":[]},"notifications":[],"dateTime":"2023-10-15T14:34:23.943Z","input":{"value":"fetch logs\n| limit 0","timeframe":{"from":"now-2h","to":"now"}}},"visualization":"recordView"},"height":236},{"id":"be84cac2-e391-46cd-98bd-5e53df7d6af7","type":"dql","showTitle":false,"state":{"input":{"value":"//file1\ndata \n    record(timestamp=now()-45m, log.source=\"file1\", content=\"betID=BET_20231019160000, start_time=20231019160000986, winners=65\"),\n    record(timestamp=now()-30m, log.source=\"file1\", content=\"betID=BET_20231019161501, start_time=20231019161501986, winners=47\"),\n    record(timestamp=now()-15m, log.source=\"file1\", content=\"betID=BET_20231019163101, start_time=20231019163101986, winners=118\")\n| parse content,\"'betID=' WORD:betID ', start_time='TIMESTAMP('yyyyMMddHHmmssSSS'):start_time ', winners='INT:nbr_winners\"\n| lookup[\n        //lookup2\n        //file2\n        data \n            record(timestamp=now()-43m, log.source=\"file2\", content=\"betID=BET_20231019160000, runID=2023101900045\"),\n            record(timestamp=now()-28m, log.source=\"file2\", content=\"betID=BET_20231019161501, runID=2023101900055\"),\n            record(timestamp=now()-12m, log.source=\"file2\", content=\"betID=BET_20231019163101, runID=2023101900065\")\n        | parse content,\"'betID=' WORD:betID ', runID=' WORD:runID\"\n        | fields timestamp, betID, runID\n        | lookup[\n                //file3\n                data \n                    record(timestamp=now()-41m, log.source=\"file3\", content=\"runID=2023101900045, end_time=2023/10/19 16:07:30\"),\n                    record(timestamp=now()-26m, log.source=\"file3\", content=\"runID=2023101900055, end_time=2023/10/19 16:25:00\"),\n                    record(timestamp=now()-10m, log.source=\"file3\", content=\"runID=2023101900065, end_time=2023/10/19 16:45:30\")\n                | parse content,\"'runID=' WORD:runID ', end_time='TIMESTAMP('yyyy/MM/d HH:mm:ss'):end_time\"\n                ], sourceField: runID, lookupField: runID, fields:{end_time}\n        //end of looku2\n        ], sourceField:betID, lookupField:betID, fields:{runID, end_time}\n| fields start_time, payment_delay=(end_time - start_time)\n//solution hidden\n| fields solution=\"the solution is hidden here\"\n| limit 1","timeframe":{"from":"now-2h","to":"now","details":{"from":{"type":"expression","normalized":"now-2h","date":"2023-10-17T08:34:38.761Z"},"to":{"type":"expression","normalized":"now","date":"2023-10-17T10:34:38.761Z"}}}},"state":"success","davis":{"includeLogs":true,"isDavisVisualizationAvailable":true},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["content"]],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[{"solution":"the solution is hidden here"}],"metadata":{"grail":{"canonicalQuery":"data record({timestamp = now() - 45m}, {log.source = \"file1\"}, {content = \"betID=BET_20231019160000, start_time=20231019160000986, winners=65\"}), record({timestamp = now() - 30m}, {log.source = \"file1\"}, {content = \"betID=BET_20231019161501, start_time=20231019161501986, winners=47\"}), record({timestamp = now() - 15m}, {log.source = \"file1\"}, {content = \"betID=BET_20231019163101, start_time=20231019163101986, winners=118\"})\n| parse content, \"'betID=' WORD:betID ', start_time='TIMESTAMP('yyyyMMddHHmmssSSS'):start_time ', winners='INT:nbr_winners\"\n| lookup \n\t[\n\t\tdata record({timestamp = now() - 43m}, {log.source = \"file2\"}, {content = \"betID=BET_20231019160000, runID=2023101900045\"}), record({timestamp = now() - 28m}, {log.source = \"file2\"}, {content = \"betID=BET_20231019161501, runID=2023101900055\"}), record({timestamp = now() - 12m}, {log.source = \"file2\"}, {content = \"betID=BET_20231019163101, runID=2023101900065\"})\n\t\t| parse content, \"'betID=' WORD:betID ', runID=' WORD:runID\"\n\t\t| fields timestamp, betID, runID\n\t\t| lookup \n\t\t\t[\n\t\t\t\tdata record({timestamp = now() - 41m}, {log.source = \"file3\"}, {content = \"runID=2023101900045, end_time=2023/10/19 16:01:30\"}), record({timestamp = now() - 26m}, {log.source = \"file3\"}, {content = \"runID=2023101900055, end_time=2023/10/19 16:18:00\"}), record({timestamp = now() - 10m}, {log.source = \"file3\"}, {content = \"runID=2023101900065, end_time=2023/10/19 16:38:30\"})\n\t\t\t\t| parse content, \"'runID=' WORD:runID ', end_time='TIMESTAMP('yyyy/MM/d HH:mm:ss'):end_time\"\n\t\t\t], sourceField:runID, lookupField:runID, fields:{end_time}\n\t], sourceField:betID, lookupField:betID, fields:{runID, end_time}\n| fields start_time, {end_time - start_time, alias:payment_delay}\n| fields \"the solution is hidden here\", alias:solution\n| limit 1","timezone":"Europe/London","query":"//file1\ndata \n    record(timestamp=now()-45m, log.source=\"file1\", content=\"betID=BET_20231019160000, start_time=20231019160000986, winners=65\"),\n    record(timestamp=now()-30m, log.source=\"file1\", content=\"betID=BET_20231019161501, start_time=20231019161501986, winners=47\"),\n    record(timestamp=now()-15m, log.source=\"file1\", content=\"betID=BET_20231019163101, start_time=20231019163101986, winners=118\")\n| parse content,\"'betID=' WORD:betID ', start_time='TIMESTAMP('yyyyMMddHHmmssSSS'):start_time ', winners='INT:nbr_winners\"\n| lookup[\n        //lookup2\n        //file2\n        data \n            record(timestamp=now()-43m, log.source=\"file2\", content=\"betID=BET_20231019160000, runID=2023101900045\"),\n            record(timestamp=now()-28m, log.source=\"file2\", content=\"betID=BET_20231019161501, runID=2023101900055\"),\n            record(timestamp=now()-12m, log.source=\"file2\", content=\"betID=BET_20231019163101, runID=2023101900065\")\n        | parse content,\"'betID=' WORD:betID ', runID=' WORD:runID\"\n        | fields timestamp, betID, runID\n        | lookup[\n                //file3\n                data \n                    record(timestamp=now()-41m, log.source=\"file3\", content=\"runID=2023101900045, end_time=2023/10/19 16:01:30\"),\n                    record(timestamp=now()-26m, log.source=\"file3\", content=\"runID=2023101900055, end_time=2023/10/19 16:18:00\"),\n                    record(timestamp=now()-10m, log.source=\"file3\", content=\"runID=2023101900065, end_time=2023/10/19 16:38:30\")\n                | parse content,\"'runID=' WORD:runID ', end_time='TIMESTAMP('yyyy/MM/d HH:mm:ss'):end_time\"\n                ], sourceField: runID, lookupField: runID, fields:{end_time}\n        //end of looku2\n        ], sourceField:betID, lookupField:betID, fields:{runID, end_time}\n| fields start_time, payment_delay=(end_time - start_time)\n//solution hidden\n| fields solution=\"the solution is hidden here\"\n| limit 1","scannedRecords":0,"dqlVersion":"V1_0","scannedBytes":0,"locale":"","executionTimeMilliseconds":11,"notifications":[],"queryId":"c6772780-d055-4f4d-b1cf-0c3869c912c5","sampled":false}},"types":[{"mappings":{"solution":{"type":"string"}},"indexRange":[0,0]}]},"notifications":[],"dateTime":"2023-10-17T10:34:53.284Z","input":{"value":"//file1\ndata \n    record(timestamp=now()-45m, log.source=\"file1\", content=\"betID=BET_20231019160000, start_time=20231019160000986, winners=65\"),\n    record(timestamp=now()-30m, log.source=\"file1\", content=\"betID=BET_20231019161501, start_time=20231019161501986, winners=47\"),\n    record(timestamp=now()-15m, log.source=\"file1\", content=\"betID=BET_20231019163101, start_time=20231019163101986, winners=118\")\n| parse content,\"'betID=' WORD:betID ', start_time='TIMESTAMP('yyyyMMddHHmmssSSS'):start_time ', winners='INT:nbr_winners\"\n| lookup[\n        //lookup2\n        //file2\n        data \n            record(timestamp=now()-43m, log.source=\"file2\", content=\"betID=BET_20231019160000, runID=2023101900045\"),\n            record(timestamp=now()-28m, log.source=\"file2\", content=\"betID=BET_20231019161501, runID=2023101900055\"),\n            record(timestamp=now()-12m, log.source=\"file2\", content=\"betID=BET_20231019163101, runID=2023101900065\")\n        | parse content,\"'betID=' WORD:betID ', runID=' WORD:runID\"\n        | fields timestamp, betID, runID\n        | lookup[\n                //file3\n                data \n                    record(timestamp=now()-41m, log.source=\"file3\", content=\"runID=2023101900045, end_time=2023/10/19 16:01:30\"),\n                    record(timestamp=now()-26m, log.source=\"file3\", content=\"runID=2023101900055, end_time=2023/10/19 16:18:00\"),\n                    record(timestamp=now()-10m, log.source=\"file3\", content=\"runID=2023101900065, end_time=2023/10/19 16:38:30\")\n                | parse content,\"'runID=' WORD:runID ', end_time='TIMESTAMP('yyyy/MM/d HH:mm:ss'):end_time\"\n                ], sourceField: runID, lookupField: runID, fields:{end_time}\n        //end of looku2\n        ], sourceField:betID, lookupField:betID, fields:{runID, end_time}\n| fields start_time, payment_delay=(end_time - start_time)\n//solution hidden\n| fields solution=\"the solution is hidden here\"\n| limit 1","timeframe":{"from":"now-2h","to":"now","details":{"from":{"type":"expression","normalized":"now-2h","date":"2023-10-17T08:34:38.761Z"},"to":{"type":"expression","normalized":"now","date":"2023-10-17T10:34:38.761Z"}}}}},"visualization":"recordView"},"height":79,"showInput":false},{"id":"b746e344-9a16-457d-8c16-7fcb93c96743","type":"markdown","markdown":"# Result Lookup\n![result_lookup](https://github.com/dynatrace-ace-services/magic_lookup/blob/main/result_lookup.png?raw=true)"},{"id":"1b4aea1b-13f1-43f2-be82-f2cc1d9bf196","type":"markdown","markdown":"## Step 2 : Calculate SLO \n- Objective = 99% < 12 min payment_delay on default period\n- display the result on: `SLO`, `target`, `SLO_success = if((SLO < target),false, else: true)`, `nbr_failed`, `total`\n\n(Optional) - you can display the result in `Site Reliability Guardian`"},{"id":"805e6b79-a3ba-4c6d-b215-e16967b298a9","type":"dql","showTitle":false,"state":{"input":{"value":"<result_1.2>\n//SLO Calulation\n| summarize nbr_failed=countIf(payment_delay > 12m), total=count()\n| fieldsAdd SLO=(toDouble(total - nbr_failed) * 100 / total), target=99\n| fields SLO, target, SLO_success = if((SLO < target),false, else: true), nbr_failed, total","timeframe":{"from":"now-2h","to":"now"}},"state":"success","davis":{"includeLogs":true,"isDavisVisualizationAvailable":true},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["content"]],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[],"metadata":{"grail":{"canonicalQuery":"fetch logs\n| limit 0","timezone":"Europe/Paris","query":"fetch logs\n| limit 0","scannedRecords":0,"dqlVersion":"V1_0","scannedBytes":0,"locale":"","executionTimeMilliseconds":8,"notifications":[],"queryId":"ddd13eed-11d1-43d5-b8bc-6e9343e303a6","sampled":false}},"types":[]},"notifications":[],"dateTime":"2023-10-07T17:01:01.138Z","input":{"value":"fetch logs\n| limit 0","timeframe":{"from":"now-2h","to":"now"}}},"visualization":"table"},"height":70},{"id":"825dff16-aa98-4646-b9e8-ba2b032259bb","type":"dql","showTitle":false,"state":{"input":{"value":"//file1\ndata \n    record(timestamp=now()-45m, log.source=\"file1\", content=\"betID=BET_20231019160000, start_time=20231019160000986, winners=65\"),\n    record(timestamp=now()-30m, log.source=\"file1\", content=\"betID=BET_20231019161501, start_time=20231019161501986, winners=47\"),\n    record(timestamp=now()-15m, log.source=\"file1\", content=\"betID=BET_20231019163101, start_time=20231019163101986, winners=118\")\n| parse content,\"'betID=' WORD:betID ', start_time='TIMESTAMP('yyyyMMddHHmmssSSS'):start_time ', winners='INT:nbr_winners\"\n| lookup[\n        //lookup2\n        //file2\n        data \n            record(timestamp=now()-43m, log.source=\"file2\", content=\"betID=BET_20231019160000, runID=2023101900045\"),\n            record(timestamp=now()-28m, log.source=\"file2\", content=\"betID=BET_20231019161501, runID=2023101900055\"),\n            record(timestamp=now()-12m, log.source=\"file2\", content=\"betID=BET_20231019163101, runID=2023101900065\")\n        | parse content,\"'betID=' WORD:betID ', runID=' WORD:runID\"\n        | fields timestamp, betID, runID\n        | lookup[\n                //file3\n                data \n                    record(timestamp=now()-41m, log.source=\"file3\", content=\"runID=2023101900045, end_time=2023/10/19 16:07:30\"),\n                    record(timestamp=now()-26m, log.source=\"file3\", content=\"runID=2023101900055, end_time=2023/10/19 16:25:00\"),\n                    record(timestamp=now()-10m, log.source=\"file3\", content=\"runID=2023101900065, end_time=2023/10/19 16:48:30\")\n                | parse content,\"'runID=' WORD:runID ', end_time='TIMESTAMP('yyyy/MM/d HH:mm:ss'):end_time\"\n                ], sourceField: runID, lookupField: runID, fields:{end_time}\n        //end of lookup2\n        ], sourceField:betID, lookupField:betID, fields:{runID, end_time}\n| fields start_time, betID, runID, payment_delay=(end_time - start_time)\n//SLO Calulation\n| summarize nbr_failed=countIf(payment_delay > 12m), total=count()\n| fieldsAdd SLO=(toDouble(total - nbr_failed) * 100 / total), target=99\n| fields SLO, target, SLO_success = if((SLO < 99),false, else: true), nbr_failed, total\n//solution hidden\n| fields solution=\"the solution is hidden here\"","timeframe":{"from":"now-2h","to":"now"}},"state":"success","davis":{"includeLogs":true,"isDavisVisualizationAvailable":true},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["content"]],"firstVisibleRowIndex":0,"columnWidths":{}}},"result":{"code":200,"value":{"records":[{"solution":"the solution is hidden here"}],"metadata":{"grail":{"canonicalQuery":"data record({timestamp = now() - 45m}, {log.source = \"file1\"}, {content = \"betID=BET_20231019160000, start_time=20231019160000986, winners=65\"}), record({timestamp = now() - 30m}, {log.source = \"file1\"}, {content = \"betID=BET_20231019161501, start_time=20231019161501986, winners=47\"}), record({timestamp = now() - 15m}, {log.source = \"file1\"}, {content = \"betID=BET_20231019163101, start_time=20231019163101986, winners=118\"})\n| parse content, \"'betID=' WORD:betID ', start_time='TIMESTAMP('yyyyMMddHHmmssSSS'):start_time ', winners='INT:nbr_winners\"\n| lookup \n\t[\n\t\tdata record({timestamp = now() - 43m}, {log.source = \"file2\"}, {content = \"betID=BET_20231019160000, runID=2023101900045\"}), record({timestamp = now() - 28m}, {log.source = \"file2\"}, {content = \"betID=BET_20231019161501, runID=2023101900055\"}), record({timestamp = now() - 12m}, {log.source = \"file2\"}, {content = \"betID=BET_20231019163101, runID=2023101900065\"})\n\t\t| parse content, \"'betID=' WORD:betID ', runID=' WORD:runID\"\n\t\t| fields timestamp, betID, runID\n\t\t| lookup \n\t\t\t[\n\t\t\t\tdata record({timestamp = now() - 41m}, {log.source = \"file3\"}, {content = \"runID=2023101900045, end_time=2023/10/19 16:01:30\"}), record({timestamp = now() - 26m}, {log.source = \"file3\"}, {content = \"runID=2023101900055, end_time=2023/10/19 16:18:00\"}), record({timestamp = now() - 10m}, {log.source = \"file3\"}, {content = \"runID=2023101900065, end_time=2023/10/19 16:38:30\"})\n\t\t\t\t| parse content, \"'runID=' WORD:runID ', end_time='TIMESTAMP('yyyy/MM/d HH:mm:ss'):end_time\"\n\t\t\t], sourceField:runID, lookupField:runID, fields:{end_time}\n\t], sourceField:betID, lookupField:betID, fields:{runID, end_time}\n| fields start_time, betID, runID, {end_time - start_time, alias:payment_delay}\n| summarize {countIf(payment_delay > 6m), alias:nbr_failed}, {count(), alias:total}\n| fieldsAdd {toDouble(total - nbr_failed) * 100 / total, alias:SLO}, {99, alias:target}\n| fields SLO, target, {if(SLO < 99, FALSE, else:TRUE), alias:SLO_success}, nbr_failed, total\n| fields \"the solution is hidden here\", alias:solution","timezone":"Europe/London","query":"//file1\ndata \n    record(timestamp=now()-45m, log.source=\"file1\", content=\"betID=BET_20231019160000, start_time=20231019160000986, winners=65\"),\n    record(timestamp=now()-30m, log.source=\"file1\", content=\"betID=BET_20231019161501, start_time=20231019161501986, winners=47\"),\n    record(timestamp=now()-15m, log.source=\"file1\", content=\"betID=BET_20231019163101, start_time=20231019163101986, winners=118\")\n| parse content,\"'betID=' WORD:betID ', start_time='TIMESTAMP('yyyyMMddHHmmssSSS'):start_time ', winners='INT:nbr_winners\"\n| lookup[\n        //lookup2\n        //file2\n        data \n            record(timestamp=now()-43m, log.source=\"file2\", content=\"betID=BET_20231019160000, runID=2023101900045\"),\n            record(timestamp=now()-28m, log.source=\"file2\", content=\"betID=BET_20231019161501, runID=2023101900055\"),\n            record(timestamp=now()-12m, log.source=\"file2\", content=\"betID=BET_20231019163101, runID=2023101900065\")\n        | parse content,\"'betID=' WORD:betID ', runID=' WORD:runID\"\n        | fields timestamp, betID, runID\n        | lookup[\n                //file3\n                data \n                    record(timestamp=now()-41m, log.source=\"file3\", content=\"runID=2023101900045, end_time=2023/10/19 16:01:30\"),\n                    record(timestamp=now()-26m, log.source=\"file3\", content=\"runID=2023101900055, end_time=2023/10/19 16:18:00\"),\n                    record(timestamp=now()-10m, log.source=\"file3\", content=\"runID=2023101900065, end_time=2023/10/19 16:38:30\")\n                | parse content,\"'runID=' WORD:runID ', end_time='TIMESTAMP('yyyy/MM/d HH:mm:ss'):end_time\"\n                ], sourceField: runID, lookupField: runID, fields:{end_time}\n        //end of lookup2\n        ], sourceField:betID, lookupField:betID, fields:{runID, end_time}\n| fields start_time, betID, runID, payment_delay=(end_time - start_time)\n//SLO Calulation\n| summarize nbr_failed=countIf(payment_delay > 6m), total=count()\n| fieldsAdd SLO=(toDouble(total - nbr_failed) * 100 / total), target=99\n| fields SLO, target, SLO_success = if((SLO < 99),false, else: true), nbr_failed, total\n//solution hidden\n| fields solution=\"the solution is hidden here\"","scannedRecords":0,"dqlVersion":"V1_0","scannedBytes":0,"locale":"","executionTimeMilliseconds":24,"notifications":[],"queryId":"7e789eda-6189-4979-ac5c-a03c7e452af5","sampled":false}},"types":[{"mappings":{"solution":{"type":"string"}},"indexRange":[0,0]}]},"notifications":[],"dateTime":"2023-10-17T16:06:45.950Z","input":{"value":"//file1\ndata \n    record(timestamp=now()-45m, log.source=\"file1\", content=\"betID=BET_20231019160000, start_time=20231019160000986, winners=65\"),\n    record(timestamp=now()-30m, log.source=\"file1\", content=\"betID=BET_20231019161501, start_time=20231019161501986, winners=47\"),\n    record(timestamp=now()-15m, log.source=\"file1\", content=\"betID=BET_20231019163101, start_time=20231019163101986, winners=118\")\n| parse content,\"'betID=' WORD:betID ', start_time='TIMESTAMP('yyyyMMddHHmmssSSS'):start_time ', winners='INT:nbr_winners\"\n| lookup[\n        //lookup2\n        //file2\n        data \n            record(timestamp=now()-43m, log.source=\"file2\", content=\"betID=BET_20231019160000, runID=2023101900045\"),\n            record(timestamp=now()-28m, log.source=\"file2\", content=\"betID=BET_20231019161501, runID=2023101900055\"),\n            record(timestamp=now()-12m, log.source=\"file2\", content=\"betID=BET_20231019163101, runID=2023101900065\")\n        | parse content,\"'betID=' WORD:betID ', runID=' WORD:runID\"\n        | fields timestamp, betID, runID\n        | lookup[\n                //file3\n                data \n                    record(timestamp=now()-41m, log.source=\"file3\", content=\"runID=2023101900045, end_time=2023/10/19 16:01:30\"),\n                    record(timestamp=now()-26m, log.source=\"file3\", content=\"runID=2023101900055, end_time=2023/10/19 16:18:00\"),\n                    record(timestamp=now()-10m, log.source=\"file3\", content=\"runID=2023101900065, end_time=2023/10/19 16:38:30\")\n                | parse content,\"'runID=' WORD:runID ', end_time='TIMESTAMP('yyyy/MM/d HH:mm:ss'):end_time\"\n                ], sourceField: runID, lookupField: runID, fields:{end_time}\n        //end of lookup2\n        ], sourceField:betID, lookupField:betID, fields:{runID, end_time}\n| fields start_time, betID, runID, payment_delay=(end_time - start_time)\n//SLO Calulation\n| summarize nbr_failed=countIf(payment_delay > 6m), total=count()\n| fieldsAdd SLO=(toDouble(total - nbr_failed) * 100 / total), target=99\n| fields SLO, target, SLO_success = if((SLO < 99),false, else: true), nbr_failed, total\n//solution hidden\n| fields solution=\"the solution is hidden here\"","timeframe":{"from":"now-2h","to":"now"}}},"visualization":"recordView"},"height":82,"showInput":false},{"id":"02d4c8be-d1ec-4ad4-bf0c-ad824ea507f7","type":"markdown","markdown":"# Result SLO\n- DQL request result\n![result_lookup](https://github.com/dynatrace-ace-services/magic_lookup/blob/main/result_slo.png?raw=true)\n- Result with `Site Reliability Guardian`\n![result_lookup_with_guardian](https://github.com/dynatrace-ace-services/magic_lookup/blob/main/result_SLO_with_guardian.png?raw=true)"},{"id":"220666d2-5523-4e31-ac2a-db85527b2c3e","type":"markdown","markdown":"# STEP 3 : Create Workflow\n- Start from `Step 2 : Calculate SLO`\n- create a workflow from the DQL : click on `Automate DQL Query`\n- rename the workflow : `magic_lookup\n\n![Create workflow](https://github.com/dynatrace-ace-services/magic_lookup/blob/main/create_workflow.png?raw=true)"},{"id":"624c77e8-2f19-46ee-bd77-a39cbe6f4626","type":"markdown","markdown":"# STEP 3.1: Create task \"http_request_1\" to call a webhook if SLO fails\n\n## Prerequisite: add outbound connections\n ````\n Settings > Preferences > Limit outbound connections > Add items\n Allowed Host:  webhook.site\n ````\n\n## Choose action\n   ``````\n   HTTP Request \n   ``````\n## Input  \n   ``````\n   POST\n   ``````\n   \n   ``````\n   https://webhook.site/xxxxx  #your webhook.site url \n   ``````\n   \n   ``````\n   {\n   \"name\": \"your name\",\n   \"SLO_success\": \"{{ result(\"execute_dql_query_1\").records[0].SLO_success }}\",  \n   \"SLO\": \"{{ result(\"execute_dql_query_1\").records[0].SLO }}\",  \n   \"target\": \"{{ result(\"execute_dql_query_1\").records[0].target }}\",  \n   \"nbr_failed\": \"{{ result(\"execute_dql_query_1\").records[0].nbr_failed }}\"  \n   }\n   ``````\nset your name\n\n## Conditions\n  ``````\n  {{ result(\"execute_dql_query_1\").records[0].SLO_success == False }}\n  ``````\n\n## #tips and tricks  \nYou can get automatically the `your name` with this command: use your own workflowID contained in the url\n  \n   ``````\n    \"name\": \"{{ workflows('abcdef-123-456-789-ghijklmnopq').lastExecution.trigger }}\"\n   ``````"},{"id":"d3dabd7e-5c45-41fe-b209-d94883383e26","type":"markdown","markdown":"# STEP 3.2 : Create task \"run_javascript_1\" to ingest metrics on your classic tenant\n\n- Ingest metric: `magiclookup.payment_delay.total`\n- Ingest metric: `magiclookup.payment_delay.failed`\n\nMore info on classic `{ metricsClient }` function [here](https://developer.dynatrace.com/reference/sdks/client-classic-environment-v2/#metricsclient)  \nRequired permission: `environment:roles:viewer`  \n\nAllow Dynatrace to run workflows\n\n## Choose action\n   ``````\n   Run javascript\n   ``````\n## Code  \n   ``````\n// optional import of sdk modules\nimport { execution } from '@dynatrace-sdk/automation-utils';\nimport { executionsClient } from '@dynatrace-sdk/client-automation';\n\n//https://developer.dynatrace.com/reference/sdks/client-classic-environment-v2/\nimport { metricsClient } from \"@dynatrace-sdk/client-classic-environment-v2\";\nexport default async function ({ execution_id }) {\n        // your code goes here\n        // e.g. get the current execution\n        const ex = await execution(execution_id);\n        console.log('Automated script execution on behalf of', ex.trigger);\n        //console.log(ex)\n        var previous_task={executionId: execution_id, id: 'execute_dql_query_1'}\n        var get_dql_result= await executionsClient.getTaskExecutionResult(previous_task)\n        const total = await metricsClient.ingest({\n           body: \"magiclookup.payment_delay.total \"+get_dql_result.records[0].total,\n        });\n        const failed = await metricsClient.ingest({\n           body: \"magiclookup.payment_delay.failed \"+get_dql_result.records[0].nbr_failed,\n        });\n        return { triggeredBy: ex.trigger };\n}\n   ``````\n\n## CONDITION\n  ``````\n  {{ result(\"execute_dql_query_1\").records!= [] }}\n  ``````\n\n"},{"id":"1e1b718b-b36e-42c9-8fb2-3026b6383c2d","type":"markdown","markdown":"# Result Workflow\n\nSolution\n````\n https://raw.githubusercontent.com/dynatrace-ace-services/magic_lookup/main/wf_magic_lookup.json\n````\n![Payment_delay](https://github.com/dynatrace-ace-services/magic_lookup/blob/main/result_workflow.png?raw=true)"}]}